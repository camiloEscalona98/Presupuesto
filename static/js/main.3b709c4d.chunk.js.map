{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAOeA,EALD,SAACC,GACX,OACA,mBAAGC,UAAU,2BAAb,SAAyCD,KC+C9BE,EAjDE,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,mBAAoBC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,mBAAwB,EAGxCC,mBAAS,GAH+B,mBAGrEC,EAHqE,KAG3DC,EAH2D,OAI9CF,oBAAS,GAJqC,mBAIrEG,EAJqE,KAI9DC,EAJ8D,KA0B5E,OACI,eAAC,WAAD,WACI,uDACGD,EAAQ,cAAC,EAAD,CAAOT,QAAQ,iCAA2C,KAErE,uBACIW,SArBe,SAAAC,GACvBA,EAAEC,iBAEEN,EAAW,GAAKO,MAAMP,GACtBG,GAAa,IAIjBA,GAAa,GACbP,EAAmBI,GACnBH,EAAgBG,GAChBF,GAAmB,KASf,UAGI,uBACIU,KAAK,SACLd,UAAU,eACVe,YAAY,wBACZC,SA/BW,SAAAL,GACvBJ,EAAgBU,SAASN,EAAEO,OAAOC,MAAO,QAgCjC,uBACIL,KAAK,SACLd,UAAU,8BACVmB,MAAM,+B,gBC2BXC,EArEI,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,kBAAuB,EAEtBjB,mBAAS,IAFa,mBAE/CkB,EAF+C,KAEvCC,EAFuC,OAGlBnB,mBAAS,GAHS,mBAG/CC,EAH+C,KAGrCC,EAHqC,OAIxBF,oBAAS,GAJe,mBAI/CG,EAJ+C,KAIxCC,EAJwC,KAiCtD,OACI,uBACAC,SA7BiB,SAAAC,GAGjB,GAFAA,EAAEC,iBAECN,EAAW,GAAKO,MAAMP,IAA+B,KAAlBiB,EAAOE,OACzChB,GAAa,OADjB,CAIAA,GAAa,GAGb,IAAMiB,EAAQ,CACVH,SACAjB,WACAqB,GAAIC,IAAQC,YAMhBR,EAAaK,GACbJ,GAAkB,GAGlBE,EAAc,IACdjB,EAAgB,KAIhB,UAGI,wDACEC,EAAQ,cAAC,EAAD,CAAOT,QAAQ,4DAAsE,KAC/F,sBAAKC,UAAU,QAAf,UACI,iDACA,uBACIc,KAAK,OACLd,UAAU,eACVe,YAAY,iBACZI,MAASI,EACTP,SAAY,SAAAL,GAAC,OAAIa,EAAcb,EAAEO,OAAOC,aAIhD,sBAAKnB,UAAU,QAAf,UACA,mDACI,uBACIc,KAAK,SACLd,UAAU,eACVe,YAAY,cACZI,MAAOb,EACPU,SAAY,SAAAL,GAAC,OAAIJ,EAAgBU,SAASN,EAAEO,OAAOC,MAAO,WAIlE,uBACAL,KAAK,SACLd,UAAU,8BACVmB,MAAM,sBCrDHW,EAZD,SAAC,GAAD,IAAEJ,EAAF,EAAEA,MAAF,OACd,oBACA1B,UAAY,SADZ,SAGI,8BACK0B,EAAMH,OACP,uBAAMvB,UAAU,QAAhB,cACM0B,EAAMpB,kBCMLyB,EAbC,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OACZ,sBAAKhC,UAAU,oBAAf,UACI,0CACCgC,EAAOC,KAAI,SAAAP,GAAK,OACf,cAAC,EAAD,CAEAA,MAASA,GADFA,EAAMC,WCPVO,EAAqB,SAACC,EAAaC,GAS5C,OAPKD,EAAc,EAAKC,EACZ,qBACAD,EAAc,EAAKC,EACnB,sBAEA,uBCQDC,EAbY,SAAC,GAA6B,IAA5BF,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACxC,OACI,eAAC,WAAD,WACI,sBAAKpC,UAAU,sBAAf,4BACqBmC,KAErB,sBAAKnC,UAAWkC,EAAmBC,EAAaC,GAAhD,yBACiBA,SC4EZE,MAhFf,WAAgB,IAAD,EAE6BjC,mBAAS,GAFtC,mBAEN8B,EAFM,KAEOjC,EAFP,OAGuBG,mBAAS,GAHhC,mBAGN+B,EAHM,KAGIjC,EAHJ,OAIiCE,oBAAS,GAJ1C,mBAINkC,EAJM,KAIWnC,EAJX,OAKmBC,mBAAS,IAL5B,mBAKN2B,EALM,KAKEQ,EALF,OAMiBnC,mBAAS,IAN1B,mBAMNqB,EANM,KAMCL,EAND,OAO2BhB,oBAAS,GAPpC,mBAONoC,EAPM,KAOMnB,EAPN,KAoCb,OAxBAoB,qBAAU,WACR,GAAID,EAAY,CAEdD,EAAc,GAAD,mBACRR,GADQ,CAEXN,KAIF,IAAMiB,EAAsBP,EAAWV,EAAMpB,SAC7CH,EAAgBwC,GAKhBrB,GAAkB,MAGnB,CAACI,EAAOe,EAAYT,EAAQI,IAO7B,qBAAKpC,UAAU,YAAf,SACE,mCACE,+CACA,qBAAKA,UAAU,gCAAf,SACGuC,EAEG,cAAC,EAAD,CACErC,mBAAoBA,EACpBC,gBAAiBA,EACjBC,mBAAoBA,IAGtB,sBAAKJ,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CACEqB,aAAcA,EACdC,kBAAmBA,MAGvB,sBAAKtB,UAAU,kBAAf,UACE,cAAC,EAAD,CACEgC,OAAQA,IAEV,cAAC,EAAD,CACEG,YAAaA,EACbC,SAAUA,kBCvDfQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b709c4d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Error = (mensaje) => {\r\n    return (\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n    )\r\n    };\r\nexport default Error;   ","import React, { Fragment, useState } from 'react';\r\nimport Error from './Error';\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n\r\n    //definir state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //funcion que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad(parseInt(e.target.value, 10))\r\n    }\r\n    //submit para definir presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n        //validar\r\n        if (cantidad < 1 || isNaN(cantidad)) {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        //si pasa validacion\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad); \r\n        actualizarPregunta(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n             { error ? <Error mensaje=\"El presupuesto es Incorrecto\" ></Error> : null}\r\n\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                ></input>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default Pregunta;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n    //funcion para agragar los gastos\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n        //validar\r\n        if(cantidad < 1 || isNaN(cantidad) || nombre.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n\r\n        }\r\n        \r\n\r\n        //pasar el gasto a componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        //resetear el form\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n    }\r\n\r\n    return (\r\n        <form\r\n        onSubmit = {agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos aqui</h2>\r\n            { error ? <Error mensaje=\"Ambos campos son obligatorios, o presupuesto incorrecto\"></Error>  : null }\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value = {nombre}\r\n                    onChange = {e => guardarNombre(e.target.value)}\r\n                ></input>\r\n            </div>\r\n\r\n            <div className=\"campo\">\r\n            <label>Cantidad Gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. $10.000\"\r\n                    value={cantidad}\r\n                    onChange = {e => guardarCantidad(parseInt(e.target.value, 10))}\r\n                ></input>\r\n\r\n            </div>\r\n            <input\r\n            type=\"submit\"\r\n            className=\"button-primary u-full-width\"\r\n            value=\"Agregar Gasto\"\r\n            ></input>\r\n        </form>\r\n    );\r\n}\r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Gasto = ({gasto}) => (\r\n<li\r\nclassName = \"gastos\"\r\n>\r\n    <p>\r\n        {gasto.nombre}\r\n        <span className=\"gasto\">\r\n            ${gasto.cantidad}\r\n        </span>\r\n    </p>\r\n</li>\r\n);\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nconst Listado = ({gastos}) => (\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado </h2>\r\n        {gastos.map(gasto => (\r\n          <Gasto\r\n          key = {gasto.id}\r\n          gasto = {gasto}\r\n          >\r\n\r\n          </Gasto>\r\n        ))}\r\n    </div>\r\n);\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n    if ((presupuesto / 4) > restante){\r\n        clase = 'alert alert-danger';\r\n    } else if ((presupuesto / 2) > restante){\r\n        clase = 'alert alert-warning';\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n    return clase;\r\n}","import React, {Fragment} from 'react';\r\nimport { revisarPresupuesto} from '../helpers';\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n  return(\r\n      <Fragment>\r\n          <div className=\"alert alert-primary\">\r\n               Presupuesto: $ {presupuesto}\r\n          </div>\r\n          <div className={revisarPresupuesto(presupuesto, restante)}>\r\n              Restante: $ {restante}\r\n\r\n          </div>\r\n      </Fragment>\r\n  )\r\n}\r\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\nfunction App() {\n\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarPregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [creargasto, guardarCrearGasto] = useState(false);\n\n\n  //useEffect que actualiza el restante\n\n  useEffect(() => {\n    if (creargasto) {\n      //agrega nuevo presupuesto\n      guardarGastos([\n        ...gastos,\n        gasto\n      ]);\n\n      //resta el presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n\n\n\n      //resetear a false\n      guardarCrearGasto(false);\n\n    }\n  }, [gasto, creargasto, gastos, restante]);\n\n\n\n\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {mostrarPregunta ?\n            (\n              <Pregunta\n                guardarPresupuesto={guardarPresupuesto}\n                guardarRestante={guardarRestante}\n                actualizarPregunta={actualizarPregunta}\n              ></Pregunta>\n            ) : (\n              <div className=\"row\">\n                <div className=\"one-half column\">\n                  <Formulario\n                    guardarGasto={guardarGasto}\n                    guardarCrearGasto={guardarCrearGasto}\n                  ></Formulario>\n                </div>\n                <div className=\"one-half column\">\n                  <Listado\n                    gastos={gastos}\n                  ></Listado>\n                  <ControlPresupuesto\n                    presupuesto={presupuesto}\n                    restante={restante}\n                  >\n\n                  </ControlPresupuesto>\n                </div>\n\n              </div>\n\n            )\n          }\n\n        </div>\n      </header>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}